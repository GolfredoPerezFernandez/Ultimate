{"version":3,"sources":["assets/background.png","assets/logo.png","src/components/ButtonMetamask.tsx","src/components/DropDownMenu.tsx","src/components/Appbar.tsx","src/navigation/routes.tsx","src/context/user-context/UserReducer.jsx","src/context/user-context/action-types.jsx","src/context/user-context/UserContext.jsx","src/context/AppContextProvider.tsx","src/context/combineComponents.tsx","src/context/user-context/UserState.tsx","App.tsx","assets/polygon.png"],"names":["module","exports","ColorButton","styled","Button","color","theme","palette","getContrastText","backgroundColor","height","borderRadius","fontFamily","fontSize","grey","ButtonMetamask","props","useMoralis","authenticate","chainId","isAuthenticated","Moralis","user","enableWeb3","isWeb3Enabled","React","setAuth","setState","isLoading","setLoading","onClickHandler","useMoralisWeb3Api","console","log","addNetwork","switchNetwork","then","signingMessage","address","get","setEthAddress","useNavigate","Box","style","flexDirection","width","justifyContent","alignItems","CircularProgress","size","sx","alignSelf","my","onClick","variant","useStyles","makeStyles","card","border","transition","borderColor","display","mx","DropdownMenuDemo","logout","styles","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","Tooltip","title","Stack","event","currentTarget","aria-controls","undefined","aria-haspopup","aria-expanded","direction","mr","Typography","overflow","whiteSpace","maxWidth","textOverflow","Menu","aria-labelledby","aria-describedby","id","onClose","PaperProps","elevation","filter","mt","ml","content","position","top","right","bgcolor","transform","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","Divider","MenuItem","logOut","ListItemIcon","Logo","require","polygon","AppBarr","navigate","AppBar","background","backdropFilter","xs","sm","md","lg","xl","CardMedia","component","image","alt","objectFit","cursor","spacing","ethAddress","DropDownMenu","userAddress","Home","Footer","AboutUs","RoadMap","Background","Navigator","init","fallback","Grid","container","m","ImageBackground","flex","source","type","bg","path","element","state","action","payload","userRender","authenticated","loginType","GetUser","GetUserAvatar","GetUserCollection","MarketContext","createContext","AppContextProvider","components","reduce","AccumulatedComponents","CurrentComponent","children","useReducer","UserReducer","dispatch","Login","userMarketType","catch","error","LoginMail","values","User","logIn","username","password","SetLoginMail","set","fullname","email","wallet","ethers","Wallet","createRandom","mnemonic","phrase","privateKey","signUp","save","alert","code","message","SettingsUser","Cloud","run","owner","useraddress","bio","LogoutFunc","UserContext","Provider","value","App","useFonts","Orbitron_400Regular","Orbitron_500Medium","Orbitron_600SemiBold","Orbitron_700Bold","Orbitron_800ExtraBold","Orbitron_900Black","StrictMode","appId","serverUrl"],"mappings":"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","file":"static/js/app.40a6e785.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.876c695c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.321b522b.png\";","import * as React from 'react';\r\nimport Button, { ButtonProps } from '@mui/material/Button';\r\nimport { grey } from '@mui/material/colors';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport _ from 'lodash';\r\n\r\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\r\nconst ColorButton = styled(Button)<ButtonProps>(({ theme }) => ({\r\n  color: theme.palette.getContrastText(\"#637bfe\"),\r\n  backgroundColor: \"#637bfe\",\r\n  height: 50,\r\n  borderRadius: 12,\r\n  fontFamily: \"Poppins_600SemiBold\",\r\n  fontSize: 14,\r\n  \"&:hover\": {\r\n    backgroundColor: grey[700],\r\n  },\r\n}));\r\n\r\nexport default function ButtonMetamask(props) {\r\n\r\n  const { authenticate, isAuthenticated,chainId, user,Moralis,isWeb3Enabled,enableWeb3 } = useMoralis();\r\n  const [authenticated,setAuth]=React.useState(\"Authenticate\")\r\n  const [state, setState] = React.useState('idle');\r\n\r\n  \r\n  const [isLoading, setLoading] = React.useState(false);\r\n  \r\nconst Web3API = useMoralisWeb3Api();\r\n\r\n  const onClickHandler= async ()=> {   \r\n    setLoading(true)\r\n    console.log(\"bienvenido\")\r\n    setState('loading');\r\n    setAuth('loading')\r\n    \r\n  await enableWeb3()\r\nconsole.log(chainId)\r\nif(chainId!==\"137\"){\r\n\r\nconst chainId2 = 137;\r\nconst chainName = \"Polygon\";\r\nconst currencyName = \"Matic\";\r\nconst currencySymbol = \"Matic\";\r\nconst rpcUrl = \"https://polygon-rpc.com\";\r\nconst blockExplorerUrl = \"https://polygonscan.com/\";\r\n\r\nawait Moralis.addNetwork(\r\n chainId2,\r\n chainName,\r\n currencyName,\r\n currencySymbol,\r\n rpcUrl,\r\n blockExplorerUrl\r\n);\r\n}\r\nconst CHAIN2 = await Moralis.chainId;\r\n \r\n\r\n\r\nif (CHAIN2 !== '0x89') {\r\n\r\nawait Moralis.switchNetwork('0x89').then(()=>{\r\n\r\n\r\n});\r\n\r\n}\r\n\r\n    \r\n    /* if (chainId !== '0x89') {\r\n     CurrentUserStore.setLogin(false)\r\n     CurrentUserStore.setLoading(false)\r\n     return\r\n    }\r\n    */\r\n\r\n   /* \r\n   await Moralis.authenticate({ type:'sol' }).then(async (user: any) => {\r\n\r\nlet email = user.get('email')\r\nlet username = user.get('username')\r\nlet createdAt = user.get('createdAt')\r\nlet sessionToken = user.get('sessionToken')\r\nlet updatedAt = user.get('updatedAt')\r\nlet address = user.get('ethAddress')\r\nCurrentUserStore.setUser(username, email, createdAt, sessionToken, updatedAt, '', address)\r\n\r\nCurrentUserStore.setLoading(true)\r\n   return\r\n\r\n})}  */\r\n\r\ntry{\r\n \r\n  \r\n  await authenticate({  \r\n    signingMessage: \"Welcome To ULTIMATE NFT.\" }).then(async (user: any) => {\r\n      console.log(\"Success\")\r\n      try{\r\n\r\n\r\nif(user){\r\n  let address = user.get('ethAddress')\r\n  props.setEthAddress(address)\r\n  console.log(\"Success\")\r\n\r\n  setLoading(false)\r\ntry{\r\n}catch(e){\r\n  setLoading(false)\r\n  console.log(e.message)\r\n}\r\n\r\n\r\n    }\r\n\r\n    return\r\n        \r\n      }catch {\r\n\r\n        setLoading(false)\r\n      }\r\n}) \r\n} catch {\r\n  setAuth('Authenticate')\r\n    \r\n    setState('idle');\r\n    setLoading(false)\r\n}\r\n}\r\n\r\nconst Web3Api = useMoralisWeb3Api();\r\nlet navigate = useNavigate();\r\n\r\nfunction handleClickLoginIn() {navigate(\"/home\")}\r\n\r\n  return ( <Box  style={{flexDirection:\"row\",width:120,justifyContent:\"center\",alignItems:\"center\"}} >\r\n      {!isLoading?     <ColorButton\r\n      sx={{fontFamily: \"Orbitron_700Bold\", color: \"#fff\", alignSelf: \"center\", my: 2 }}\r\n      onClick={onClickHandler}  \r\n      variant=\"contained\"\r\n    >\r\n      CONNECT\r\n    </ColorButton>\r\n    :\r\n      <CircularProgress color=\"secondary\" size=\"1.5rem\" />}\r\n     \r\n      \r\n    </Box>)}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Stack from '@mui/material/Stack';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\r\nimport { useMoralis } from 'react-moralis';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport AssignmentIndOutlinedIcon from '@mui/icons-material/AssignmentIndOutlined';\r\nimport Logout from '@mui/icons-material/Logout';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    backgroundColor:'#16151A',\r\n    border: '0.5px solid #474747',\r\n    borderRadius: 14,\r\n    transition: '0.4s',\r\n    '&:hover': {\r\n      borderColor: '#676767',\r\n    },\r\n    width: 100,\r\n    height:40,\r\n    color:' #fff',\r\n    display:'flex',\r\n    mx:2.5\r\n  },\r\n\r\n}));\r\n\r\n\r\nexport const DropdownMenuDemo = (props) => {\r\n\r\n  const { Moralis,logout } = useMoralis();\r\n  \r\n  const styles = useStyles();\r\n  let navigate = useNavigate();\r\n\r\n  function Mynft() {navigate(\"/Mynft\")}\r\n\r\n  async function logOut() {\r\n    await logout();\r\n    props.setEthAddress(\"\")\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Box className={styles.card}>          \r\n\r\n          <Tooltip title=\"Account settings\">\r\n            <Stack\r\n            onClick={handleClick}\r\n            aria-controls={open ? 'account-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? 'true' : undefined}\r\n            direction='row' sx={{width:'100%', justifyContent:'center', alignItems:'center', }}>\r\n\r\n\r\n                      <Stack  sx={{alignSelf:'center',alignItems:'center',mr:0.5}}>\r\n\r\n                      <Typography \r\n                        sx={{fontFamily: \"Orbitron_700Bold\",\r\n                          color:\"green\",\r\n                          fontSize:12,\r\n                          overflow: 'hidden',\r\n                          whiteSpace: 'nowrap',\r\n                          maxWidth: 120,\r\n                          textOverflow: 'ellipsis'\r\n                        }}>\r\n                        {\"ONLINE\" }\r\n                      </Typography>\r\n                  \r\n                     \r\n\r\n          \r\n\r\n                      </Stack>\r\n                <KeyboardArrowDownOutlinedIcon sx={{color:'#fff', fontSize:18, mr:1}}/> \r\n\r\n\r\n\r\n            </Stack>\r\n          </Tooltip>\r\n\r\n          <Menu\r\n            aria-labelledby=\"parent-modal-title\"\r\n            aria-describedby=\"parent-modal-description\"\r\n            anchorEl={anchorEl}\r\n            id=\"account-menu\"\r\n            open={open}\r\n            onClose={handleClose}\r\n            onClick={handleClose}\r\n            PaperProps={{\r\n              elevation: 0,\r\n              sx: {\r\n                fontFamily: 'Poppins_500Medium',\r\n                overflow: 'visible',\r\n                filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                mt: 1.5,\r\n                '& .MuiAvatar-root': {\r\n                  width: 32,\r\n                  height: 32,\r\n                  ml: -0.5,\r\n                  mr: 1,\r\n                },\r\n                '&:before': {\r\n                  content: '\"\"',\r\n                  display: 'initial',\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  right: 14,\r\n                  width: 10,\r\n                  height: 10,\r\n                  bgcolor: 'background.paper',\r\n                  transform: 'translateY(-50%) rotate(45deg)',\r\n                  zIndex: 0,\r\n                },\r\n              },\r\n            }}\r\n            transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n            anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n          >\r\n   \r\n\r\n            <Divider />\r\n\r\n          \r\n            <MenuItem onClick={()=>logOut()}>\r\n              <ListItemIcon>\r\n                <Logout fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              Logout\r\n            </MenuItem> \r\n          </Menu>\r\n\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DropdownMenuDemo;\r\n","\r\nimport SearchRoundedIcon from '@mui/icons-material/SearchRounded';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Stack from '@mui/material/Stack';\r\nimport { styled } from '@mui/system';\r\nimport React from \"react\";\r\n\r\nimport ButtonMetamask from './ButtonMetamask';\r\nimport DrawerMenu from './Buttons/DrawerMenu';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Typography } from '@mui/material';\r\nimport DropDownMenu from './DropDownMenu';\r\n\r\n\r\nlet Logo = require(\"../../assets/logo.png\");\r\n\r\n\r\nlet polygon = require(\"../../assets/polygon.png\");\r\n\r\n\r\n\r\nexport default function AppBarr(props : any )  {\r\n  \r\n  let navigate = useNavigate();\r\n\r\n\r\nreturn ( \r\n    \r\n<AppBar \r\nposition=\"sticky\" \r\nsx={{\r\n  // background:'#16151A',\r\n  background: 'black',\r\n  backdropFilter: 'blur( 4px )'\r\n}} \r\n>\r\n  <Stack \r\n  direction=\"row\"\r\n  justifyContent=\"space-between\" \r\n  alignItems=\"center\" \r\n  height={{xs: 70, sm: 70, md:70}}\r\n  mt={1}\r\n  mx={{xs:2, sm:5, md:5, lg:2, xl:2}}\r\n  >\r\n\r\n    <Box \r\n      onClick={() => navigate(\"/\")}\r\n      sx={{\r\n        width: 200,\r\n        height: 70,\r\n      }}\r\n    >\r\n      <CardMedia\r\n      component=\"img\"\r\n      image={Logo}\r\n      alt=\"Logo\"\r\n      sx={{\r\n        width: '100%',\r\n        height:'100%',\r\n        objectFit:'contain',\r\n        cursor: 'pointer',\r\n      }}\r\n      />\r\n    </Box>\r\n\r\n    <Stack direction='row' spacing={2} sx={{justifyContent:'center', alignItems:'center'}}>\r\n\r\n    <Box sx={{ display:  {xs:'block', sm:'block', md:'block', lg:'block', xl:'block'}}}>\r\n\r\n    {props.ethAddress!==\"\"?   \r\n            <Stack direction=\"row\" spacing={1} sx={{justifyContent:'center', alignItems:'center'}}>\r\n           \r\n              <DropDownMenu \r\n              setEthAddress={props.setEthAddress } \r\n              userAddress={props.ethAddress } \r\n              />\r\n              \r\n              <CardMedia\r\n            component=\"img\"\r\n            image={polygon}\r\n            alt=\"Logo\"\r\n            sx={{width: {xs:40, sm:'none', md:50, lg:50, xl:50}, objectFit:'cover',}}\r\n            />  \r\n            </Stack>   \r\n              :\r\n            <Stack direction=\"row\" spacing={1} sx={{justifyContent:'center', alignItems:'center'}}>\r\n              <Box sx={{ display: {xs:'none', sm:'block', md:'block', lg:'block', xl:'block'} }}> \r\n           \r\n              <ButtonMetamask/>\r\n              </Box> \r\n              <CardMedia\r\n            component=\"img\"\r\n            image={polygon}\r\n            alt=\"Logo\"\r\n            sx={{width: {xs:40, sm:'none', md:50, lg:50, xl:50}, objectFit:'cover',}}\r\n            />  \r\n            </Stack>}\r\n\r\n      \r\n    </Box>\r\n{/* \r\n      <Box sx={{ display:  {xs:'block', sm:'block', md:'block', lg:'block', xl:'block'}}}>\r\n        <DrawerMenu/>\r\n      </Box>\r\n */}\r\n    </Stack>\r\n\r\n  </Stack>\r\n</AppBar>\r\n\r\n  );\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport {Routes, Route, Link } from \"react-router-dom\";\r\nimport { useMoralis } from 'react-moralis';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { Grid } from \"@mui/material\";\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\nimport ParticlesBg from 'particles-bg';\r\nimport Appbar from '@components/Appbar';\r\n\r\nimport {ImageBackground, mageBackground } from \"react-native\";\r\nconst Home = React.lazy(() => import('@screens/Home'));\r\nconst Footer = React.lazy(() => import('@screens/Footer'));\r\n\r\nconst AboutUs = React.lazy(() => import('@screens/AboutUs'));\r\nconst RoadMap = React.lazy(() => import('@screens/RoadMap'));\r\n\r\n\r\nlet Background = require(\"../../assets/background.png\");\r\n\r\n\r\nlet polygon = require(\"../../assets/logo.png\");\r\nexport default function Navigator() {\r\n  const { authenticate, isAuthenticated,chainId, user,Moralis,isWeb3Enabled,enableWeb3 } = useMoralis();\r\n\r\n  const [ethAddress, setEthAddress]=React.useState(\"\")\r\nlet config = {\r\n  num: [4, 7],\r\n  rps: 0.1,\r\n  radius: [5, 40],\r\n  life: [1.5, 3],\r\n  v: [2, 3],\r\n  tha: [-40, 40],\r\n  // body: \"./img/icon.png\", // Whether to render pictures\r\n  // rotate: [0, 20],\r\n  alpha: [0.6, 0],\r\n  scale: [1, 0.1],\r\n  position: \"center\", // all or center or {x:1,y:1,width:100,height:100}\r\n  color: [\"random\", \"#ff0000\"],\r\n  cross: \"dead\", // cross or bround\r\n  random: 15,  // or null,\r\n  g: 5,    // gravity\r\n  // f: [2, -1], // force\r\n  onParticleUpdate: (ctx, particle) => {\r\n      ctx.beginPath();\r\n      ctx.rect(particle.p.x, particle.p.y, particle.radius * 2, particle.radius * 2);\r\n      ctx.fillStyle = particle.color;\r\n      ctx.fill();\r\n      ctx.closePath();\r\n  }\r\n};\r\n    React.useEffect(()=>{\r\n    async function init(){\r\n     \r\n if(user){\r\n  let address =user.get(\"ethAddress\")\r\n  setEthAddress( address)\r\n\r\n } \r\n    }  \r\ninit()\r\n    },[user])\r\n     \r\n  return (\r\n    <React.Suspense \r\n    fallback={\r\n      <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      sx={{backgroundColor: '#000000',width: '100%', height: '100%'}}\r\n    >\r\n      <CardMedia\r\n        component=\"img\"\r\n        image={polygon}\r\n        alt=\"Singulart Logo\"\r\n        sx={{ width: { xs: 150, sm: 150, md: 200, lg: 200, xl: 200 }, objectFit: 'cover', }}\r\n      />\r\n      <CircularProgress\r\n        style={{ 'color': 'white' }}\r\n        sx={{ m: 2 }}\r\n        size=\"1.5rem\"\r\n      />\r\n    </Grid>\r\n    \r\n    }>\r\n      \r\n      <ImageBackground\r\n          style={{flex:1,alignSelf:'stretch'}}\r\n          source={Background}\r\n          >    \r\n           <ParticlesBg type=\"cobweb\" color=\"#fff\" bg={true} />\r\n\r\n        <Appbar setEthAddress={setEthAddress} ethAddress={ethAddress} />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home ethAddress={ethAddress} />}/>\r\n          <Route path=\"/\" element={<RoadMap/>}/>\r\n          <Route path=\"/\" element={<AboutUs/>}/>\r\n        </Routes>\r\n        <Footer />\r\n        </ImageBackground>\r\n    </React.Suspense>\r\n  );\r\n};","import {\r\n    USER_AUTHENTICATED,\r\n    GET_USER, \r\n    GET_USER_AVATAR , \r\n    GET_USER_COLLECTION,\r\n    GET_LOGIN_TYPE,\r\n    USER_RENDER\r\n} from './action-types'\r\n\r\nexport default function ( state, action ){\r\n\r\n   const {payload, type} = action;\r\n\r\n   switch(type){\r\n        case USER_RENDER:\r\n        return {\r\n            ...state,\r\n            userRender: payload\r\n        }\r\n        case USER_AUTHENTICATED:\r\n        return {\r\n            ...state,\r\n            authenticated: payload\r\n        }\r\n        case GET_LOGIN_TYPE:\r\n            return {\r\n                ...state,\r\n                loginType: payload\r\n            }\r\n        case GET_USER:\r\n        return {\r\n            ...state,\r\n            GetUser: payload\r\n        }\r\n        case GET_USER_AVATAR: \r\n        return {\r\n            ...state,\r\n            GetUserAvatar: payload\r\n        }\r\n        case GET_USER_COLLECTION: \r\n        return {\r\n            ...state,\r\n            GetUserCollection: payload\r\n        }\r\n   }\r\n\r\n}","export const USER_AUTHENTICATED = 'USER_AUTHENTICATED';\r\nexport const GET_USER = 'GET_USER'\r\nexport const GET_USER_AVATAR = 'GET_USER_AVATAR'\r\nexport const GET_USER_COLLECTION = 'GET_USER_COLLECTION'\r\nexport const GET_LOGIN_TYPE = 'GET_LOGIN_TYPE'\r\nexport const USER_RENDER = 'USER_RENDER'\r\n","import { createContext } from \"react\";\r\n\r\nconst MarketContext = createContext(null);\r\n\r\nexport default MarketContext;","import React from 'react';\r\nimport ContextProvider1 from './user-context/UserState'\r\n\r\n\r\nimport { combineComponents } from './combineComponents';\r\n\r\nconst providers = [\r\n  ContextProvider1,\r\n\r\n]\r\n\r\nexport const AppContextProvider = combineComponents(...providers);","import React, { ComponentProps, FC } from 'react';\r\n\r\nexport const combineComponents = (...components: FC[]): FC => {\r\n  return components.reduce(\r\n    (AccumulatedComponents, CurrentComponent) => {\r\n      return ({ children }: ComponentProps<FC>): JSX.Element => {\r\n        return (\r\n          <AccumulatedComponents>\r\n            <CurrentComponent>{children}</CurrentComponent>\r\n          </AccumulatedComponents>\r\n        );\r\n      };\r\n    },\r\n    ({ children }) => <>{children}</>,\r\n  );\r\n};","import React, {useReducer} from 'react'\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { ethers } from \"ethers\";\r\n\r\nimport UserReducer from \"./UserReducer\";\r\nimport UserContext from '@context/user-context/UserContext';\r\n\r\n\r\nconst UserState = (props: any) => {\r\n\r\n    const  {Moralis, authenticate, logout } = useMoralis()\r\n\r\n    const initialState  = {\r\n      userRender:[],\r\n      loginType:'',\r\n      authenticated: false,\r\n      GetUser: [],\r\n      GetUserAvatar:[],\r\n      GetUserCollection:[]\r\n    }\r\n    \r\n    const [state, dispatch] = useReducer(UserReducer, initialState)\r\n\r\n    const Login = async () => {\r\n      \r\n      if (!state.authenticated) {\r\n\r\n        await authenticate({signingMessage: \"Welcome to Koolinart\" })\r\n          .then(function (user) {\r\n            console.log(\"logged in user:\", user);\r\n            console.log(user.get(\"ethAddress\"));\r\n            const userMarketType = user.get(\"loginType\")\r\n            console.log(\"loginType\", userMarketType);\r\n\r\n            dispatch({\r\n              type: 'USER_AUTHENTICATED',\r\n              payload: true\r\n            })\r\n            dispatch({\r\n              type: 'GET_LOGIN_TYPE',\r\n              payload: userMarketType\r\n            })\r\n            dispatch({\r\n              type: 'USER_RENDER',\r\n              payload: user\r\n            })\r\n            console.log(\"USER_RENDER\", user);\r\n            return\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n\r\n      }\r\n    }\r\n\r\n    const LoginMail = async (values: any) => {\r\n      if (!state.authenticated) {\r\n        console.log((state.authenticated))\r\n        await Moralis.User.logIn( values.username, values.password)\r\n          .then(function (user) {\r\n            console.log(\"logged in user:\", user);\r\n            console.log(user.get(\"ethAddress\"));\r\n            const userMarketType = user.get(\"loginType\")\r\n            console.log(\"loginType\", userMarketType);\r\n            dispatch({\r\n              type: 'USER_AUTHENTICATED',\r\n              payload: true,\r\n              \r\n            })\r\n            dispatch({\r\n              type: 'GET_LOGIN_TYPE',\r\n              payload: userMarketType\r\n            })\r\n            dispatch({\r\n              type: 'USER_RENDER',\r\n              payload: user\r\n            })  \r\n  \r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      }\r\n    }\r\n\r\n    const SetLoginMail = async (values: any) => {\r\n      \r\n      const user = new Moralis.User();\r\n\r\n      user.set(\"fullname\", values.fullname);\r\n      user.set(\"username\", values.username);\r\n      user.set(\"email\", values.email);\r\n      user.set(\"password\",  values.password);\r\n\r\n      const wallet = ethers.Wallet.createRandom()\r\n      user.set(\"mnemonic\", wallet.mnemonic.phrase)\r\n      user.set(\"privateKey\", wallet.privateKey)\r\n      user.set(\"ethAddress\", wallet.address)\r\n      user.set(\"loginType\", \"email\")\r\n\r\n      \r\n      try {\r\n        await user.signUp();\r\n        user.save()\r\n\r\n        // Hooray! Let them use the app now.\r\n      } catch (error) {\r\n        // Show the error message somewhere and let the user try again.\r\n        alert(\"Error: \" + error.code + \" \" + error.message);\r\n      }\r\n      \r\n    }\r\n\r\n    const SettingsUser = async () => {\r\n\r\n      await Moralis.Cloud.run('SetSettingsUser', { owner: useraddress, bio })\r\n\r\n\r\n      // dispatch({\r\n      //   type: 'GET_USER',\r\n      //   payload: results\r\n      // })\r\n\r\n    }\r\n\r\n    const LogoutFunc = async() => {\r\n\r\n      if (state.authenticated ) {\r\n\r\n        await Moralis.User.logOut()\r\n        dispatch({\r\n          type: 'USER_AUTHENTICATED',\r\n          payload: false\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n    return (\r\n\r\n        <UserContext.Provider value={{\r\n            userRender: state.userRender,\r\n            loginType: state.loginType,\r\n            authenticated: state.authenticated,\r\n            GetUser: state.GetUser,\r\n            GetUserAvatar: state.GetUserAvatar,\r\n            GetUserCollection: state.GetUserCollection,\r\n\r\n            Login,\r\n            LogoutFunc,\r\n            SettingsUser,\r\n            SetLoginMail,\r\n            LoginMail,\r\n        }}>\r\n\r\n            {props.children}\r\n\r\n        </UserContext.Provider>\r\n\r\n    )\r\n}\r\n\r\nexport default UserState;","import  React from 'react';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport MainAppRoutes from '@navigation/routes';\r\n\r\nimport {\r\n  useFonts,\r\n  Orbitron_400Regular,\r\n  Orbitron_500Medium,\r\n  Orbitron_600SemiBold,\r\n  Orbitron_700Bold,\r\n  Orbitron_800ExtraBold,\r\n  Orbitron_900Black,\r\n} from '@expo-google-fonts/orbitron';\r\n\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport { serverUrl, appId } from '@config/moralis-connect';\r\n\r\nimport {AppContextProvider} from '@context/AppContextProvider';\r\n\r\nexport default function App() {\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    Orbitron_400Regular,\r\n    Orbitron_500Medium,\r\n    Orbitron_600SemiBold,\r\n    Orbitron_700Bold,\r\n    Orbitron_800ExtraBold,\r\n    Orbitron_900Black,\r\n  });\r\n\r\n  return (\r\n\r\n    <React.StrictMode>\r\n      <MoralisProvider appId={\"5NZSY2PL6xkzyXeBsJaSIjtPcrmCr3ibSUNHOZuC\"} serverUrl={\"https://3srquts6min7.usemoralis.com:2053/server\"}>\r\n        <AppContextProvider>\r\n          <Router>\r\n            <MainAppRoutes/>\r\n          </Router>\r\n        </AppContextProvider>\r\n      </MoralisProvider>\r\n    </React.StrictMode>\r\n\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/polygon.1140771b.png\";"],"sourceRoot":""}