{"version":3,"sources":["node_modules/fast-deep-equal/index.js","node_modules/is-stream/index.js","node_modules/@toruslabs/solana-embed/dist/solanaEmbed.esm.js","node_modules/@web3auth/torus-solana-adapter/dist/torusSolanaAdapter.esm.js"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","isStream","stream","pipe","writable","_write","_writableState","readable","_read","_readableState","duplex","transform","_transform","messages","disconnected","permanentlyDisconnected","unsupportedSync","method","concat","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","connected","chainId","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","configuration","supportedVerifierList","api","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","prodTorusUrl","localStorageKey","window","location","hostname","log","getLogger","getWindowId","Math","random","slice","getTorusUrl","async","torusUrl","logLevel","buildEnv","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","_ref","w","h","dualScreenLeft","undefined","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","left","abs","top","BaseProvider","connectionStream","jsonRpcStreamName","super","this","Error","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ignoreStream","jsonRpcConnection","createStream","rpcEngine","push","req","res","next","error","rpc","invalidRequest","message","data","done","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","params","Promise","resolve","reject","payload","callback","streamName","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","logStreamDisconnectWarning","documentReady","readyState","handle","eventName","handler","_len","arguments","handlerArgs","_key","handlerWrapper","removeEventListener","addEventListener","handleEvent","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","features","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","_this$window","open","href","focus","close","locationReplaceOnRedirect","replace","ownKeys$2","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","TorusCommunicationProvider","_state","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread$2","_defaultState","dappStorageKey","languageTranslations","userLanguage","navigator","language","userLanguages","split","getUserLanguage","embedTranslations","windowRefs","on","isConnected","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","GET_PROVIDER_STATE","info","initialized","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","right","bottom","torusWidgetVisibility","buttonPosition","assign","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","attachOnLoad","_handleWindow","remove","children","bindOnLoad","ownKeys$1","hasEmittedConnection","TorusInPageProvider","_objectSpread$1","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","accounts","isUnlocked","isInternal","err","result","isEthAccounts","finalAccounts","account","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","ownKeys","_objectSpread","version","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","type","storage","x","setItem","removeItem","code","name","storageAvailable","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","enableLogging","network","showTorusButton","useLocalStorage","apiKey","extraParams","enableAll","setDefaultLevel","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","body","dappMetadata","getSiteMetadata","contentWindow","postMessage","_setupWeb3","hideTorusButton","torus","handleSetup","loginProvider","provider","login_hint","loginParams","privateKey","userInfo","success","LOGOUT","logout","clearInit","isElement","element","Element","Document","contains","path","instanceId","WALLET_INSTANCE_ID","finalPath","searchParams","USER_INFO","TOPUP","transaction","serialize","requireAllSignatures","response","serializeMessage","messageOnly","parsed","JSON","parse","signature","publicKey","Buffer","addSignature","transactions","encodedMessage","map","tx","signatures","item","idx","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","login","then","catch","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all","SolanaWalletAdapter","TORUS_SOLANA","SOLANA","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","chainConfig","_this$solanaProvider","status","CONNECTED","solanaProvider","_","options","checkInitializationRequirements","blockExplorer","displayName","rpcTarget","ticker","tickerName","blockExplorerUrl","logo","torusInstance","init","config","READY","autoConnect","rehydrated","connect","ERRORED","checkConnectionRequirements","notReady","CONNECTING","adapter","torusInpageProvider","sendTransaction","signAllTransactions","signMessage","signTransaction","setupProvider","setProvider","reconnected","connectionError","cleanup","notConnectedError","DISCONNECTED","getUserInfo"],"mappings":"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","file":"static/js/13.8ee4552a.chunk.js","sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { PublicKey } from '@solana/web3.js';\nimport { createLoggerMiddleware, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback, BasePostMessageStream } from '@toruslabs/openlogin-jrpc';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport dequal from 'fast-deep-equal';\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: maxEventListeners => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \"}\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {}\n};\n\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: \"torus-\".concat(window.location.hostname)\n};\n\nvar log = loglevel.getLogger(\"solana-embed\");\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"Torus - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"Torus: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getWindowId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async buildEnv => {\n  let torusUrl;\n  let logLevel; // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = \"https://solana.tor.us\";\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 600,\n  width: 400\n};\nfunction storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n/**\n * popup handler utils\n */\n\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref;\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nclass BaseProvider extends SafeEventEmitter {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"jsonRpcConnectionEvents\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"Torus\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({\n      origin: location.origin\n    }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  send(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  sendAsync(payload) {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n}\n\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nclass PopupHandler extends SafeEventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass TorusCommunicationProvider extends BaseProvider {\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"windowRefs\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    this._state = _objectSpread$2({}, TorusCommunicationProvider._defaultState); // public state\n\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {}; // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const {\n          isFullScreen,\n          rid\n        } = params;\n\n        this._displayIframe({\n          isFull: isFullScreen,\n          rid: rid\n        });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const {\n          windowId,\n          url\n        } = params;\n\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const {\n          currentLoginProvider\n        } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn() {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen() {\n    return this._state.isIFrameFullScreen;\n  }\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params) {\n    try {\n      const {\n        torusUrl,\n        dappStorageKey,\n        torusAlertContainer,\n        torusIframe\n      } = params;\n      this.torusUrl = torusUrl;\n      this.dappStorageKey = dappStorageKey;\n      this.torusAlertContainer = torusAlertContainer;\n      this.torusIframe = torusIframe;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const {\n        currentLoginProvider,\n        isLoggedIn\n      } = await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?windowId=\").concat(windowId));\n\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    }\n\n    const handledWindow = new PopupHandler({\n      url: finalUrl,\n      target,\n      features\n    });\n    handledWindow.open();\n\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n\n      return;\n    } // Add to collection only if window is opened\n\n\n    this.windowRefs[windowId] = handledWindow; // We tell the iframe that the window has been successfully opened\n\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: {\n        windowId\n      }\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: {\n          windowId\n        }\n      });\n    });\n  }\n\n  _displayIframe() {\n    let {\n      isFull = false,\n      rid = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: {\n        isIFrameFullScreen: isFull,\n        rid\n      }\n    });\n  }\n\n  hideTorusButton() {\n    this._state.torusWidgetVisibility = false;\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this._state.torusWidgetVisibility = true;\n\n    this._displayIframe();\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    const cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(currentLoginProvider, isLoggedIn) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        currentLoginProvider,\n        isLoggedIn\n      });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  } // Called if the iframe wants to close the window cause it is done processing the request\n\n\n  _handleCloseWindow(params) {\n    const {\n      windowId\n    } = params;\n\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  async _createPopupBlockAlert(windowId, url) {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  getLogoUrl() {\n    const logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n    return logoUrl;\n  }\n\n}\n\n_defineProperty(TorusCommunicationProvider, \"_defaultState\", {\n  buttonPosition: \"bottom-left\",\n  currentLoginProvider: null,\n  isIFrameFullScreen: false,\n  hasEmittedConnection: false,\n  torusWidgetVisibility: false,\n  initialized: false,\n  isLoggedIn: false,\n  isPermanentlyDisconnected: false,\n  isConnected: false\n});\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nclass TorusInPageProvider extends BaseProvider {\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    this._state = _objectSpread$1({}, TorusInPageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.chainId = null;\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params);\n      }\n    }; // json rpc notification listener\n\n\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked\n      } = await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", {\n        chainId\n      });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n\n}\n\n_defineProperty(TorusInPageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\n/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  try {\n    const {\n      document\n    } = window; // Use the site's favicon if it exists\n\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    } // Search through available icons in no particular order\n\n\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nconst {\n  version\n} = require(\"../package.json\");\n\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/frame\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      modalZIndex = 99999\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"requestedLoginProvider\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationProvider\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn() {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      network,\n      showTorusButton = false,\n      useLocalStorage = false,\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      apiKey = \"torus-default\",\n      extraParams = {}\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv);\n    log.enableAll();\n    log.info(torusUrl, \"url loaded\");\n    log.info(\"Solana Embed Version :\".concat(version));\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";else torusIframeUrl.pathname += \"/frame\";\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n    torusIframeUrl.hash = hashParams.toString(); // Iframe code\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\".concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement(\"<div id=\\\"torusAlertContainer\\\" style=\\\"display:none; z-index: \".concat(this.alertZIndex.toString(), \"\\\"></div>\"));\n    this.styleLink = htmlToElement(\"<link href=\\\"\".concat(torusUrl, \"/css/widget.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\"));\n\n    const handleSetup = async () => {\n      return new Promise((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata(); // send init params here\n\n            this.torusIframe.contentWindow.postMessage({\n              buttonPosition,\n              apiKey,\n              network,\n              dappMetadata,\n              extraParams\n            }, torusIframeUrl.origin);\n            await this._setupWeb3({\n              torusUrl\n            });\n            if (showTorusButton) this.showTorusButton();else this.hideTorusButton();\n            this.isInitialized = true;\n            window.torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({\n          isFull: true\n        });\n      } // If user is already logged in, we assume they have given access to the website\n\n\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest({\n          method: \"solana_requestAccounts\",\n          params: [this.requestedLoginProvider, params.login_hint]\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      } // This would never happen, but just in case\n\n\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async loginWithPrivateKey(loginParams) {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    const {\n      success\n    } = await this.communicationProvider.request({\n      method: \"login_with_private_key\",\n      params: {\n        privateKey,\n        userInfo\n      }\n    });\n    if (!success) throw new Error(\"Login Failed\");\n  }\n\n  async logout() {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: []\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp() {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof Document;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton() {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params) {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: _objectSpread({}, params)\n    });\n  }\n\n  async showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const instanceId = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: []\n    });\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach(x => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n\n    if (this.dappStorageKey) {\n      finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    } // No need to track this window state. Hence, no _handleWindow call.\n\n\n    const walletWindow = new PopupHandler({\n      url: finalUrl,\n      features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW)\n    });\n    walletWindow.open();\n  }\n\n  async getUserInfo() {\n    const userInfoResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: []\n    });\n    return userInfoResponse;\n  }\n\n  async initiateTopup(provider, params) {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n\n    this.communicationProvider._handleWindow(windowId);\n\n    const topupResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: {\n        provider,\n        params,\n        windowId\n      }\n    });\n    return topupResponse;\n  } // Solana specific API\n\n\n  async getAccounts() {\n    const response = await this.provider.request({\n      method: \"getAccounts\",\n      params: []\n    });\n    return response;\n  }\n\n  async sendTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    return response;\n  }\n\n  async signTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"sign_transaction\",\n      params: {\n        message: transaction.serializeMessage().toString(\"hex\"),\n        messageOnly: true\n      }\n    }); // reconstruct signature pair\n\n    const parsed = JSON.parse(response);\n    const signature = {\n      publicKey: new PublicKey(parsed.publicKey),\n      signature: Buffer.from(parsed.signature, \"hex\")\n    };\n    transaction.addSignature(signature.publicKey, signature.signature);\n    return transaction;\n  }\n\n  async signAllTransactions(transactions) {\n    const encodedMessage = transactions.map(tx => {\n      return tx.serializeMessage().toString(\"hex\");\n    });\n    const responses = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: {\n        message: encodedMessage,\n        messageOnly: true\n      }\n    }); // reconstruct signature pairs\n\n    const signatures = responses.map(item => {\n      const parsed = JSON.parse(item);\n      return {\n        publicKey: new PublicKey(parsed.publicKey),\n        signature: Buffer.from(parsed.signature, \"hex\")\n      };\n    });\n    transactions.forEach((tx, idx) => {\n      tx.addSignature(signatures[idx].publicKey, signatures[idx].signature);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data\n      }\n    });\n    return response;\n  }\n\n  async getGaslessPublicKey() {\n    const response = await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: []\n    });\n    return response;\n  } // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n\n  handleDappStorageKey(useLocalStorage) {\n    let dappStorageKey = \"\";\n\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = \"torus-app-\".concat(getWindowId());\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  async _setupWeb3(providerParams) {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // compose the inPage provider\n\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        }); // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n\n\n        _payload.windowId = windowId;\n      }\n\n      inPageProvider._rpcEngine.handle(_payload, cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW) // todo: are these features generic for all\n\n        }); // for communication methods sending window id in jrpc req params\n\n\n        _payload.params.windowId = windowId;\n      }\n\n      communicationProvider._rpcEngine.handle(_payload, cb);\n    }; // detect solana_requestAccounts and pipe to enable for now\n\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inPageProvider[m]; // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      const self = this;\n\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const {\n          method,\n          params = []\n        } = request;\n\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({\n            loginProvider: params[0]\n          });\n          self.login({\n            loginProvider: params[0]\n          }) // eslint-disable-next-line promise/no-callback-in-promise\n          .then(res => cb(null, res)) // eslint-disable-next-line promise/no-callback-in-promise\n          .catch(err => cb(err));\n        }\n\n        return originalMethod.apply(this, [request, cb]);\n      };\n    }; // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n\n\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n    await Promise.all([inPageProvider._initializeState(), communicationProvider._initializeState(_objectSpread(_objectSpread({}, providerParams), {}, {\n      dappStorageKey: this.dappStorageKey,\n      torusAlertContainer: this.torusAlertContainer,\n      torusIframe: this.torusIframe\n    }))]);\n    log.debug(\"Torus - injected provider\");\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInPageProvider, Torus as default };\n//# sourceMappingURL=solanaEmbed.esm.js.map\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Torus from '@toruslabs/solana-embed';\nimport { BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, getChainConfig, log, ADAPTER_EVENTS, WalletInitializationError, Web3AuthError, WalletLoginError } from '@web3auth/base';\nimport { TorusInjectedProvider } from '@web3auth/solana-provider';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass SolanaWalletAdapter extends BaseAdapter {\n  constructor() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    _defineProperty(this, \"name\", WALLET_ADAPTERS.TORUS_SOLANA);\n\n    _defineProperty(this, \"adapterNamespace\", ADAPTER_NAMESPACES.SOLANA);\n\n    _defineProperty(this, \"currentChainNamespace\", CHAIN_NAMESPACES.SOLANA);\n\n    _defineProperty(this, \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(this, \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(this, \"torusInstance\", null);\n\n    _defineProperty(this, \"torusWalletOptions\", void 0);\n\n    _defineProperty(this, \"initParams\", void 0);\n\n    _defineProperty(this, \"loginSettings\", {});\n\n    _defineProperty(this, \"solanaProvider\", null);\n\n    _defineProperty(this, \"rehydrated\", false);\n\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n  }\n\n  get provider() {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n      var _this$solanaProvider;\n\n      return ((_this$solanaProvider = this.solanaProvider) === null || _this$solanaProvider === void 0 ? void 0 : _this$solanaProvider.provider) || null;\n    }\n\n    return null;\n  }\n\n  set provider(_) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options) {\n    super.checkInitializationRequirements(); // set chainConfig for mainnet by default if not set\n\n    let network;\n\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n      const {\n        blockExplorer,\n        displayName,\n        ticker,\n        tickerName,\n        rpcTarget,\n        chainId\n      } = this.chainConfig;\n      network = {\n        chainId,\n        rpcTarget,\n        blockExplorerUrl: blockExplorer,\n        displayName,\n        ticker,\n        tickerName,\n        logo: \"\"\n      };\n    } else {\n      const {\n        chainId,\n        blockExplorer,\n        displayName,\n        rpcTarget,\n        ticker,\n        tickerName\n      } = this.chainConfig;\n      network = {\n        chainId,\n        rpcTarget,\n        blockExplorerUrl: blockExplorer,\n        displayName,\n        tickerName,\n        ticker,\n        logo: \"\"\n      };\n    }\n\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus solana adapter init\");\n    await this.torusInstance.init(_objectSpread(_objectSpread({\n      showTorusButton: false\n    }, this.initParams), {}, {\n      network\n    }));\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig\n      }\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      log.debug(\"initializing torus solana adapter\");\n\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect() {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, {\n      adapter: WALLET_ADAPTERS.TORUS_SOLANA\n    });\n\n    try {\n      await this.torusInstance.login(this.loginSettings);\n\n      try {\n        const torusInpageProvider = this.torusInstance.provider;\n        torusInpageProvider.sendTransaction = this.torusInstance.sendTransaction.bind(this.torusInstance);\n        torusInpageProvider.signAllTransactions = this.torusInstance.signAllTransactions.bind(this.torusInstance);\n        torusInpageProvider.signMessage = this.torusInstance.signMessage.bind(this.torusInstance);\n        torusInpageProvider.signTransaction = this.torusInstance.signTransaction.bind(this.torusInstance);\n        await this.solanaProvider.setupProvider(torusInpageProvider);\n      } catch (error) {\n        // some issue in solana wallet, always connecting to mainnet on init.\n        // fallback to change network if not connected to correct one on login.\n        if (error instanceof Web3AuthError && error.code === 5010) {\n          const {\n            chainId,\n            blockExplorer,\n            displayName,\n            rpcTarget,\n            ticker,\n            tickerName\n          } = this.chainConfig;\n          const network = {\n            chainId,\n            rpcTarget,\n            blockExplorerUrl: blockExplorer,\n            displayName,\n            tickerName,\n            ticker,\n            logo: \"\"\n          };\n          await this.torusInstance.setProvider(network);\n        } else {\n          throw error;\n        }\n      }\n\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, {\n        adapter: WALLET_ADAPTERS.TORUS_SOLANA,\n        reconnected: this.rehydrated\n      });\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo() {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n\n  setAdapterSettings(_) {}\n\n}\n\nexport { SolanaWalletAdapter };\n//# sourceMappingURL=torusSolanaAdapter.esm.js.map\n"],"sourceRoot":""}